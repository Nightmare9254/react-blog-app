{"version":3,"sources":["Random.js","userImg.js","components/User.js","components/Post.js","components/AnimationBlocks.js","components/Posts.js","components/SinglePost.js","components/MainPosts.js","pages/Main.js","components/UserInfo.js","components/SerchUser.js","components/Photo.js","components/Photos.js","components/Album.js","components/Albums.js","App.js","serviceWorker.js","index.js"],"names":["roll","tab","rand","length","Math","floor","random","indexOf","push","imgTab","User","userId","useState","users","setUsers","useEffect","fetch","then","res","json","className","map","user","name","src","Post","id","title","to","AnimationBlocks","Posts","posts","setPosts","loadPost","setLoadPost","prePosts","rngTab","i","post","body","SinglePost","d","useParams","singlePost","setSinglePost","MainPosts","isLoad","setIsLoad","Main","isOpen","setIsOpen","onClick","class","UserInfo","email","address","city","zipcode","SerchUser","value","setValue","setUser","load","isSearching","setIsSearching","fetchUser","type","placeholder","onKeyDown","e","keyCode","onChange","target","phone","Photo","url","Photos","photos","setPhotos","album","setAlbum","photoLoad","setPhotoLoad","response","photo","Album","Albums","albums","setAlbums","loadAlbum","setLoadAlbum","preTab","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0c0c9c39.chunk.js","sourcesContent":["\r\nexport function roll(tab){\r\n\r\n    let rand;\r\n\r\n    function random(){\r\n        rand = Math.floor(Math.random() * (101 - 1) + 1)\r\n    }\r\n\r\n    while(tab.length !== 100){\r\n        random();\r\n        if(tab.indexOf(rand) == -1){\r\n            tab.push(rand);\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\n","export const imgTab = [\"\",'https://images.unsplash.com/photo-1584536682683-b79a8744eaa0?ixlib=rb-1.2.1&auto=format&fit=crop&w=634&q=80','https://images.unsplash.com/photo-1595507287504-83625092ff6a?ixlib=rb-1.2.1&auto=format&fit=crop&w=634&q=80','https://images.unsplash.com/photo-1592818800435-341fd2817aef?ixlib=rb-1.2.1&auto=format&fit=crop&w=634&q=80','https://images.unsplash.com/photo-1484800089236-7ae8f5dffc8e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=634&q=80','https://images.unsplash.com/photo-1529626455594-4ff0802cfb7e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=634&q=80','https://images.unsplash.com/photo-1504703395950-b89145a5425b?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=651&q=80','https://images.unsplash.com/photo-1527736947477-2790e28f3443?ixlib=rb-1.2.1&auto=format&fit=crop&w=698&q=80','https://images.unsplash.com/photo-1508474722893-c3ccb8918d39?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=632&q=80','https://images.unsplash.com/photo-1481824429379-07aa5e5b0739?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=642&q=80','https://images.unsplash.com/photo-1502898295-455afaf0f015?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=634&q=80'];","import React, { useEffect, useState } from 'react';\r\nimport {imgTab} from  '../userImg';\r\n\r\nfunction User({userId}){\r\n\r\n    const [users,setUsers] = useState([]);\r\n\r\n        useEffect(() => {\r\n            fetch(`https://jsonplaceholder.typicode.com/users?id=${userId}`)\r\n            .then(res => res.json())\r\n            .then(json => setUsers(json))\r\n            // .then(json => console.log(json))\r\n        })\r\n\r\n\r\n    return(\r\n        <div className=\"user\">\r\n            {users.map(user => <p className=\"user-name\">Created by: <br/><span className=\"user-name-span\">{user.name}</span></p>)}\r\n            <img src={imgTab[userId]} className=\"user-img\"></img>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default User;\r\n","import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport User from './User';\r\n\r\n\r\n  function Post({userId, id, title}){\r\n\r\n    return (\r\n      <div className=\"single-post\">\r\n            <User userId={userId}/>\r\n            <p className=\"single-post-title\">{title}</p>\r\n            <Link to={`posts/${id}`} className=\"link\">See more</Link>\r\n            <hr/>\r\n      </div>\r\n    );\r\n  }\r\nexport default Post;\r\n","import React from 'react';\r\n\r\nfunction AnimationBlocks(){\r\n        //<h6 className=\"ani-header\">Loading...</h6>\r\n    return(\r\n        <div>\r\n            <div className=\"load-ani1\"></div>\r\n            <div className=\"load-ani2\"></div>\r\n            <div className=\"load-ani3\"></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AnimationBlocks;","import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { roll } from '../Random';\r\nimport Post from \"./Post\";\r\nimport AnimationBlocks from './AnimationBlocks';\r\n\r\n\r\n  function Posts() {\r\n\r\n    const [posts,setPosts] = useState([]);\r\n    const [users,setUsers] = useState([]);\r\n    const [loadPost,setLoadPost] = useState(false);\r\n    const prePosts = [];\r\n    //1. While dopoki dlugosc tablicy randomowych liczb nie jest 100\r\n    //2. robisz funckje getRadom()\r\n    //3. W while robisz if() czy juz jest w tablicy jezeli nie ma takiej liczb to push else losuj kolejna\r\n    //4. For w fetchu do 100\r\n    //5. Przypisac do prePosts\r\n    //6. Cale preposts przypisac do setPosts\r\n    let rngTab = [];\r\n    roll(rngTab);\r\n\r\n\r\n\r\n     useEffect(() =>{\r\n           for(let i = 0; i <= 99; i++){\r\n            fetch(`https://jsonplaceholder.typicode.com/posts/${rngTab[i]}`)\r\n            .then(res => res.json())\r\n            .then(json => {\r\n              prePosts.push(json);\r\n              if(prePosts.length === 100){\r\n                setPosts(prePosts);\r\n                setLoadPost(true);\r\n              }\r\n            })\r\n            //.then(json => console.log(json));\r\n           }\r\n\r\n      },[]);\r\n\r\n    return (\r\n      <div className=\"posts-main\">\r\n          {!loadPost && <AnimationBlocks/>}\r\n          {loadPost &&  <Link to=\"/\" className=\"link-to-main\"><i className=\"fas fa-arrow-left fa-2x\"></i></Link>}\r\n          {loadPost && posts.map(post => <Post user={users.id} key={post.id} userId={post.userId} id={post.id} title={post.title} body={post.body}/>)}\r\n      </div>\r\n    );\r\n  }\r\n\r\nexport default Posts;\r\n","import React, { useEffect, useState } from 'react';\r\nimport {useParams, Link} from 'react-router-dom';\r\nimport User from './User';\r\nimport AnimationBlocks from './AnimationBlocks';\r\n\r\n\r\nfunction SinglePost(d){\r\n\r\n    const {id} = useParams();\r\n    const [singlePost,setSinglePost] = useState({});\r\n    const [loadPost,setLoadPost] = useState(false);\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        fetch(`https://jsonplaceholder.typicode.com/posts/${id}`)\r\n            .then(res => res.json())\r\n            .then(json => {\r\n                setSinglePost(json)\r\n                setLoadPost(true);\r\n            })\r\n    })\r\n    return(\r\n        <div className=\"single-post-wrapper\">\r\n            {!loadPost && <AnimationBlocks/>}\r\n            {loadPost &&  <User userId={singlePost.userId}/>}\r\n            <p className=\"single-post-title\">{singlePost.title}</p>\r\n            <p className=\"single-post-body\">{singlePost.body}</p>\r\n            {loadPost &&  <Link to=\"/posts\"  className=\"link\">Go back</Link>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SinglePost\r\n\r\n","import React,{useState, useEffect} from 'react';\r\nimport { roll } from '../Random';\r\nimport {Link} from 'react-router-dom'\r\nimport Post from './Post';\r\nimport AnimationBlocks from './AnimationBlocks';\r\n\r\nfunction MainPosts(){\r\n\r\n    const [posts,setPosts] = useState([]);\r\n    const [isLoad, setIsLoad] = useState(false);\r\n    const prePosts = []\r\n    const rand = [];\r\n    roll(rand);\r\n\r\n\r\n    useEffect(() => {\r\n        for(let i = 0; i < 4; i++){\r\n            fetch(`https://jsonplaceholder.typicode.com/posts/${rand[i]}`)\r\n            .then(res => res.json())\r\n            .then(json => {\r\n                prePosts.push(json);\r\n                if(prePosts.length === 4){\r\n                  setPosts(prePosts);\r\n                  setIsLoad(true);\r\n                }\r\n              })\r\n        }\r\n    },[])\r\n\r\n\r\n    return(\r\n        <>\r\n        {!isLoad && <AnimationBlocks/>}\r\n        {isLoad &&\r\n            <div className=\"main-posts\">\r\n                {posts.map(post => <Post userId={post.userId} id={post.id} title={post.title}/>)}\r\n                <Link to=\"/posts\" className=\"link link-main\">More</Link>\r\n            </div>\r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MainPosts;\r\n","import React, {useState} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport styled from \"styled-components\";\r\nimport MainPosts from '../components/MainPosts';\r\n\r\n\r\nfunction Main(){\r\n\r\n    const [isOpen,setIsOpen] = useState(false)\r\n\r\n\r\n    // const Menu = styled.nav`\r\n    //     transform: ${({ isOpen }) => isOpen ? 'translateX(0)' : 'translateX(-100%)'};\r\n    // `;\r\n\r\n\r\n    return(\r\n        <div className='wrap'>\r\n        <h1>Main page</h1>\r\n        <div className=\"wrapper-content\">\r\n            <MainPosts/>\r\n        </div>\r\n\r\n        {!isOpen && <i onClick={() => {\r\n            setIsOpen(true)\r\n            }} className=\"fas fa-bars\"></i>}\r\n        {isOpen && <i onClick={() => {\r\n            setIsOpen(false)\r\n\r\n            }} class=\"fas fa-chevron-right\"></i>}\r\n\r\n\r\n       {isOpen && <div className=\"hamburger\">\r\n            <Link to=\"/posts\" className=\"main-link\">Posts</Link>\r\n            <Link to=\"/search-users\" className=\"main-link\">Search users</Link>\r\n            <Link to=\"/albums\" className=\"main-link\">Albums</Link>\r\n            </div>}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {imgTab} from  '../userImg';\r\n\r\nfunction UserInfo({name, email, address, id}){\r\n\r\n    return(\r\n        <div className=\"user-info\">\r\n            <p>Username: <span className=\"user-info-span\">{name}</span></p>\r\n            <p>Email: <span className=\"user-info-span\">{email}</span></p>\r\n            <p>City: <span className=\"user-info-span\">{address.city}</span></p>\r\n            <p>Zipcode: <span className=\"user-info-span\">{address.zipcode}</span></p>\r\n            <img src={imgTab[id]} className=\" user-info-img\"/>\r\n            <Link to=\"/\" className=\"link link-user-info\">Go back</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\n// to rob jeszcze ja bd za 10 min\r\n\r\nexport default UserInfo;","import React, {useState} from 'react';\r\nimport UserInfo from './UserInfo';\r\nimport { Link } from 'react-router-dom';\r\nimport AnimationBlocks from './AnimationBlocks';\r\n\r\nfunction SerchUser(){\r\n\r\n    const [value,setValue] = useState(\"\");\r\n    const [user,setUser] = useState([]);\r\n    const [load,setIsLoad] = useState(false);\r\n    const [isSearching,setIsSearching] = useState(false)\r\n\r\n    function fetchUser(){\r\n        fetch(`https://jsonplaceholder.typicode.com/users/?username=${value}`)\r\n        .then(res => res.json())\r\n        .then(json =>  {\r\n            setUser(json)\r\n            setIsLoad(true)\r\n            setIsSearching(true)\r\n        })\r\n    }\r\n\r\n    function add(e){\r\n        if(e.keyCode === 13){\r\n            fetchUser();\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className=\"search-user-wrapper\">\r\n            <Link to=\"/\" className=\"link user-link\">Go back</Link>\r\n            <div className=\"search-user-bar\">\r\n                <input type=\"text\" placeholder=\"Serch for a user\" className=\"search-input\" onKeyDown={add} value={value}  onChange={(e) => setValue(e.target.value)}/>\r\n                <button className=\"search-button\" onClick={() => fetchUser()}\r\n                ><i class=\"fas fa-search\"></i></button>\r\n            </div>\r\n         {!load && isSearching && <AnimationBlocks/>}\r\n         {isSearching && user.length === 0 && <div className=\"notfound-wrapper\"><p className=\"user-not-found\">User not  found</ p><div className=\"square\"></div></div>}\r\n         {load && user.map(user => <UserInfo key={user.id} id={user.id} address={user.address} name={user.name} email={user.email} phone={user.phone}/>)}\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default SerchUser;","import React from 'react';\r\n\r\nfunction Photo({title,url}){\r\n\r\n    return(\r\n        <div>\r\n            <p className=\"single-photo-title\">Photo title: <span className=\"single-photo-span\">{title}</span></p>\r\n            <img src={url} className=\"single-photo-img\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Photo;","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport Photo from './Photo';\r\nimport {Link} from 'react-router-dom';\r\nimport AnimationBlocks from './AnimationBlocks';\r\n\r\nfunction Photos(){\r\n    const [photos,setPhotos] = useState([]);\r\n    const [album,setAlbum] = useState({});\r\n    const [photoLoad,setPhotoLoad] = useState(false);\r\n\r\n    const {id} = useParams();\r\n\r\n    useEffect(() => {\r\n        fetch(`https://jsonplaceholder.typicode.com/photos?albumId=${id}`)\r\n        .then(response => response.json())\r\n        .then(json => {\r\n            setPhotos(json);\r\n            setPhotoLoad(true);\r\n        })\r\n\r\n        fetch(`https://jsonplaceholder.typicode.com/albums/${id}`)\r\n        .then(res => res.json())\r\n        .then(json => setAlbum(json));\r\n        //.then(json => console.log(json));\r\n    },[id])\r\n\r\n    return (\r\n        <div className=\"photos-wrapper\">\r\n            {!photoLoad && <AnimationBlocks/>}\r\n            {photoLoad && <Link to=\"/albums\" className=\"link-to-main\"><i class=\"fas fa-arrow-left fa-2x\"></i></Link>}\r\n            {photoLoad && <h1 className=\"photos-album-title\">Album title: {album.title}</h1>}\r\n            {photoLoad && photos.map(photo => <Photo key={photo.id} title={photo.title} url={photo.url}/>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Photos;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport User from './User';\r\n\r\nfunction Album({title,userId,id}){\r\n\r\n\r\n\r\n    return(\r\n        <div className=\"album-title\">\r\n            <h2 className=\"album-header\">{title}</h2>\r\n            <User userId={userId}/>\r\n            <Link to={`/albums/${id}`} className=\"link\">See Photos</Link>\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Album;","import React, { useEffect, useState } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport Album from './Album';\r\nimport {roll} from '../Random';\r\nimport AnimationBlocks from './AnimationBlocks';\r\n\r\n\r\nfunction Albums(){\r\n    const [albums, setAlbums] = useState([]);\r\n    const [loadAlbum,setLoadAlbum] = useState(false);\r\n    const preTab = [];\r\n    let rngTab = [];\r\n    roll(rngTab);\r\n\r\n        useEffect(() => {\r\n\r\n            for(let i = 0; i <= 99; i++){\r\n            fetch(`https://jsonplaceholder.typicode.com/albums/${rngTab[i]}`)\r\n                .then(res => res.json())\r\n                .then(json => {\r\n                    preTab.push(json)\r\n                    if(preTab.length === 100){\r\n                        setAlbums(preTab);\r\n                        setLoadAlbum(true)\r\n                    }\r\n                })\r\n            }\r\n        },[])\r\n\r\n\r\n\r\n    return(\r\n\r\n        <div className=\"albums-wrapper\">\r\n            {!loadAlbum && <AnimationBlocks/>}\r\n             <Link to=\"/\" className=\"link-to-main\"><i class=\"fas fa-arrow-left fa-2x\"></i></Link>\r\n            <h1 className=\"albums-header\">Albums</h1>\r\n            {loadAlbum && albums.map(album => <Album key={album.id} userId={album.userId} id={album.id} title={album.title}/>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Albums;","import React from 'react';\nimport Posts from './components/Posts';\nimport SinglePost from './components/SinglePost';\nimport Main from './pages/Main';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport SerchUser from './components/SerchUser';\nimport Photos from './components/Photos';\nimport Albums from './components/Albums';\n\nfunction App() {\n\n  return(\n    <Router>\n      <Switch>\n        <Route exact path='/posts/:id' component={SinglePost}/>\n        <Route exact path='/albums/:id' component={Photos}/>\n        <Route exact path='/albums' component={Albums}/>\n        <Route exact path='/posts' component={Posts}/>\n        <Route exact path=\"/search-users\" component={SerchUser}/>\n        <Route exact path=\"/testowa\" component={Main}/>\n        <Route exact path='/' component={Main}/>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n\n\n//1. GLowna strona jakies hero naglowek > sekcja z postami ale tylko np 4 posty i jak ktos klinie all posts to go przeniesie do wszystkich postow\n//2. Wystylizuj tego errora\n//3. Animacja ladowania na zdjecia i pojedynczego posta","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}