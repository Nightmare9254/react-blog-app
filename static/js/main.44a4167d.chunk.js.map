{"version":3,"sources":["Random.js","components/AnimationBlocks.js","userImg.js","components/User.js","components/Post.js","components/Posts.js","components/SinglePost.js","pages/Main.js","components/UserInfo.js","fetchSingleUser.js","components/SerchUser.js","components/Photo.js","components/Photos.js","components/Album.js","components/Albums.js","App.js","serviceWorker.js","index.js"],"names":["roll","tab","rand","length","Math","floor","random","indexOf","push","AnimationBlocks","className","imgTab","User","userId","useState","users","setUsers","useEffect","fetch","then","res","json","map","user","name","src","Post","id","title","to","Posts","posts","setPosts","loadPost","setLoadPost","prePosts","rngTab","i","class","post","body","SinglePost","useParams","singlePost","setSinglePost","Main","UserInfo","email","address","city","zipcode","fetchSingleUser","value","setUser","setIsLoad","SerchUser","setValue","load","type","placeholder","onKeyDown","e","key","target","onChange","onClick","phone","Photo","url","Photos","photos","setPhotos","album","setAlbum","photoLoad","setPhotoLoad","response","photo","Album","Albums","albums","setAlbums","loadAlbum","setLoadAlbum","preTab","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.44a4167d.chunk.js","sourcesContent":["\r\nexport function roll(tab){\r\n\r\n    let rand;\r\n\r\n    function random(){\r\n        rand = Math.floor(Math.random() * (101 - 1) + 1)\r\n    }\r\n\r\n    while(tab.length !== 100){\r\n        random();\r\n        if(tab.indexOf(rand) == -1){\r\n            tab.push(rand);\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\n","import React from 'react';\r\n\r\nfunction AnimationBlocks(){\r\n        //<h6 className=\"ani-header\">Loading...</h6>\r\n    return(\r\n        <div>\r\n            <div className=\"load-ani1\"></div>\r\n            <div className=\"load-ani2\"></div>\r\n            <div className=\"load-ani3\"></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AnimationBlocks;","export const imgTab = [\"\",'https://images.unsplash.com/photo-1584536682683-b79a8744eaa0?ixlib=rb-1.2.1&auto=format&fit=crop&w=634&q=80','https://images.unsplash.com/photo-1595507287504-83625092ff6a?ixlib=rb-1.2.1&auto=format&fit=crop&w=634&q=80','https://images.unsplash.com/photo-1592818800435-341fd2817aef?ixlib=rb-1.2.1&auto=format&fit=crop&w=634&q=80','https://images.unsplash.com/photo-1484800089236-7ae8f5dffc8e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=634&q=80','https://images.unsplash.com/photo-1529626455594-4ff0802cfb7e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=634&q=80','https://images.unsplash.com/photo-1504703395950-b89145a5425b?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=651&q=80','https://images.unsplash.com/photo-1527736947477-2790e28f3443?ixlib=rb-1.2.1&auto=format&fit=crop&w=698&q=80','https://images.unsplash.com/photo-1508474722893-c3ccb8918d39?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=632&q=80','https://images.unsplash.com/photo-1481824429379-07aa5e5b0739?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=642&q=80','https://images.unsplash.com/photo-1502898295-455afaf0f015?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=634&q=80'];","import React, { useEffect, useState } from 'react';\r\nimport {imgTab} from  '../userImg';\r\n\r\nfunction User({userId}){\r\n\r\n    const [users,setUsers] = useState([]);\r\n\r\n        useEffect(() => {\r\n            fetch(`https://jsonplaceholder.typicode.com/users?id=${userId}`)\r\n            .then(res => res.json())\r\n            .then(json => setUsers(json))\r\n            // .then(json => console.log(json))\r\n        })\r\n\r\n\r\n    return(\r\n        <div className=\"user\">\r\n            {users.map(user => <p className=\"user-name\">Created by: <br/><span className=\"user-name-span\">{user.name}</span></p>)}\r\n            <img src={imgTab[userId]} className=\"user-img\"></img>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default User;\r\n","import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport AnimationBlocks from './AnimationBlocks';\r\nimport User from './User';\r\n\r\n\r\n  function Post({userId, id, title}){\r\n\r\n    return (\r\n      <div className=\"single-post\">\r\n            <User userId={userId}/>\r\n            <p className=\"single-post-title\">{title}</p>\r\n            <Link to={`posts/${id}`} className=\"link\">See more</Link>\r\n            <hr/>\r\n      </div>\r\n    );\r\n  }\r\nexport default Post;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { roll } from '../Random';\r\nimport Post from \"./Post\";\r\nimport AnimationBlocks from './AnimationBlocks';\r\n\r\n\r\n  function Posts() {\r\n\r\n    const [posts,setPosts] = useState([]);\r\n    const [users,setUsers] = useState([]);\r\n    const [loadPost,setLoadPost] = useState(false);\r\n    const prePosts = [];\r\n    //1. While dopoki dlugosc tablicy randomowych liczb nie jest 100\r\n    //2. robisz funckje getRadom()\r\n    //3. W while robisz if() czy juz jest w tablicy jezeli nie ma takiej liczb to push else losuj kolejna\r\n    //4. For w fetchu do 100\r\n    //5. Przypisac do prePosts\r\n    //6. Cale preposts przypisac do setPosts\r\n    let rngTab = [];\r\n    roll(rngTab);\r\n\r\n\r\n\r\n     useEffect(() =>{\r\n           for(let i = 0; i <= 99; i++){\r\n            fetch(`https://jsonplaceholder.typicode.com/posts/${rngTab[i]}`)\r\n            .then(res => res.json())\r\n            .then(json => {\r\n              prePosts.push(json);\r\n              if(prePosts.length === 100){\r\n                setPosts(prePosts);\r\n                setLoadPost(true);\r\n              }\r\n            })\r\n            //.then(json => console.log(json));\r\n           }\r\n\r\n      },[]);\r\n\r\n    return (\r\n      <div className=\"posts-main\">\r\n          {!loadPost && <AnimationBlocks/>}\r\n          {loadPost &&  <Link to=\"/\" className=\"link-to-main\"><i class=\"fas fa-arrow-left fa-2x\"></i></Link>}\r\n          {loadPost && posts.map(post => <Post user={users.id} key={post.id} userId={post.userId} id={post.id} title={post.title} body={post.body}/>)}\r\n      </div>\r\n    );\r\n  }\r\n\r\nexport default Posts;\r\n","import React, { useEffect, useState } from 'react';\r\nimport Post from './Post';\r\nimport {useParams, Link} from 'react-router-dom';\r\nimport User from './User';\r\n\r\n\r\nfunction SinglePost(){\r\n\r\n    const {id} = useParams();\r\n    const [singlePost,setSinglePost] = useState({});\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        fetch(`https://jsonplaceholder.typicode.com/posts/${id}`)\r\n            .then(res => res.json())\r\n            .then(json => setSinglePost(json))\r\n    })\r\n    return(\r\n        <div className=\"single-post-wrapper\">\r\n            <User userId={singlePost.userId}/>\r\n            <p className=\"single-post-title\">{singlePost.title}</p>\r\n            <p className=\"single-post-body\">{singlePost.body}</p>\r\n            <Link to=\"/posts\"  className=\"link\">Go back</Link>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SinglePost\r\n\r\n","import React, {useState} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nfunction Main(){\r\n\r\n\r\n    return(\r\n        <div className=\"main-header\">\r\n            <Link to=\"/posts\" className=\"main-link\">Posts</Link>\r\n            <Link to=\"/search-users\" className=\"main-link\">Search users</Link>\r\n            <Link to=\"/albums\" className=\"main-link\">Albums</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {imgTab} from  '../userImg';\r\n\r\nfunction UserInfo({name, email, address, id}){\r\n\r\n    return(\r\n        <div className=\"user-info\">\r\n            <p>Username: <span className=\"user-info-span\">{name}</span></p>\r\n            <p>Email: <span className=\"user-info-span\">{email}</span></p>\r\n            <p>City: <span className=\"user-info-span\">{address.city}</span></p>\r\n            <p>Zipcode: <span className=\"user-info-span\">{address.zipcode}</span></p>\r\n            <img src={imgTab[id]} className=\" user-info-img\"/>\r\n            <Link to=\"/\" className=\"link link-user-info\">Go back</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\n// to rob jeszcze ja bd za 10 min\r\n\r\nexport default UserInfo;","export function fetchSingleUser(value,setUser,setIsLoad){\r\n    fetch(`https://jsonplaceholder.typicode.com/users/?username=${value}`)\r\n                        .then(res => res.json())\r\n                        .then(json => setUser(json))\r\n                        setIsLoad(true)\r\n}","import React, {useState} from 'react';\r\nimport UserInfo from './UserInfo';\r\nimport {fetchSingleUser} from '../fetchSingleUser';\r\nimport { Link } from 'react-router-dom';\r\nimport AnimationBlocks from './AnimationBlocks';\r\n\r\nfunction SerchUser(){\r\n\r\n    const [value,setValue] = useState(\"\");\r\n    const [user,setUser] = useState([]);\r\n    const [load,setIsLoad] = useState(false);\r\n    //{console.log(value)}\r\n\r\n\r\n    return(\r\n        <div className=\"search-user-wrapper\">\r\n            {!load && <Link to=\"/\" className=\"link\">Go back</Link>}\r\n            <div className=\"search-user-bar\">\r\n                <input type=\"text\" placeholder=\"Serch for a user\" className=\"search-input\" value={value} onKeyDown={(e) =>{\r\n                    if(e.key === 'Enter'){\r\n                        setIsLoad(true);\r\n                        fetchSingleUser(e.target.value,setUser);\r\n                    }\r\n                } } onChange={(e) => setValue(e.target.value)}/>\r\n                <button className=\"search-button\" onClick={() => {\r\n                    setIsLoad(true)\r\n                    fetchSingleUser(value,setUser,setIsLoad)\r\n                }\r\n                }><i class=\"fas fa-search\"></i></button>\r\n            </div>\r\n         {load && <AnimationBlocks/>}\r\n         {!load && user.map(user => <UserInfo key={user.id} id={user.id} address={user.address} name={user.name} email={user.email} phone={user.phone}/>)}\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default SerchUser;","import React from 'react';\r\n\r\nfunction Photo({title,url}){\r\n\r\n    return(\r\n        <div>\r\n            <p className=\"single-photo-title\">Photo title: <span className=\"single-photo-span\">{title}</span></p>\r\n            <img src={url} className=\"single-photo-img\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Photo;","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport Photo from './Photo';\r\nimport {Link} from 'react-router-dom';\r\nimport AnimationBlocks from './AnimationBlocks';\r\n\r\nfunction Photos(){\r\n    const [photos,setPhotos] = useState([]);\r\n    const [album,setAlbum] = useState({});\r\n    const [photoLoad,setPhotoLoad] = useState(false);\r\n\r\n    const {id} = useParams();\r\n\r\n    useEffect(() => {\r\n        fetch(`https://jsonplaceholder.typicode.com/photos?albumId=${id}`)\r\n        .then(response => response.json())\r\n        .then(json => {\r\n            setPhotos(json);\r\n            setPhotoLoad(true);\r\n        })\r\n\r\n        fetch(`https://jsonplaceholder.typicode.com/albums/${id}`)\r\n        .then(res => res.json())\r\n        .then(json => setAlbum(json));\r\n        //.then(json => console.log(json));\r\n    },[id])\r\n\r\n    return (\r\n        <div className=\"photos-wrapper\">\r\n            {!photoLoad && <AnimationBlocks/>}\r\n            {photoLoad && <Link to=\"/albums\" className=\"link-to-main\"><i class=\"fas fa-arrow-left fa-2x\"></i></Link>}\r\n            {photoLoad && <h1 className=\"photos-album-title\">Album title: {album.title}</h1>}\r\n            {photoLoad && photos.map(photo => <Photo key={photo.id} title={photo.title} url={photo.url}/>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Photos;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport User from './User';\r\n\r\nfunction Album({title,userId,id}){\r\n\r\n\r\n\r\n    return(\r\n        <div className=\"album-title\">\r\n            <h2 className=\"album-header\">{title}</h2>\r\n            <User userId={userId}/>\r\n            <Link to={`/albums/${id}`} className=\"link\">See Photos</Link>\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Album;","import React, { useEffect, useState } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport Album from './Album';\r\nimport {roll} from '../Random';\r\nimport AnimationBlocks from './AnimationBlocks';\r\n\r\n\r\nfunction Albums(){\r\n    const [albums, setAlbums] = useState([]);\r\n    const [loadAlbum,setLoadAlbum] = useState(false);\r\n    const preTab = [];\r\n    let rngTab = [];\r\n    roll(rngTab);\r\n\r\n        useEffect(() => {\r\n\r\n            for(let i = 0; i <= 99; i++){\r\n            fetch(`https://jsonplaceholder.typicode.com/albums/${rngTab[i]}`)\r\n                .then(res => res.json())\r\n                .then(json => {\r\n                    preTab.push(json)\r\n                    if(preTab.length === 100){\r\n                        setAlbums(preTab);\r\n                        setLoadAlbum(true)\r\n                    }\r\n                })\r\n            }\r\n        },[])\r\n\r\n\r\n\r\n    return(\r\n        <div className=\"albums-wrapper\">\r\n            {!loadAlbum && <AnimationBlocks/>}\r\n            {loadAlbum && <Link to=\"/\" className=\"link-to-main\"><i class=\"fas fa-arrow-left fa-2x\"></i></Link>}\r\n            {loadAlbum && <h1 className=\"albums-header\">Albums</h1>}\r\n            {loadAlbum && albums.map(album => <Album key={album.id} userId={album.userId} id={album.id} title={album.title}/>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Albums;","import React from 'react';\nimport Posts from './components/Posts';\nimport SinglePost from './components/SinglePost';\nimport Main from './pages/Main';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport SerchUser from './components/SerchUser';\nimport Photos from './components/Photos';\nimport Albums from './components/Albums';\n\nfunction App() {\n\n  return(\n    <Router>\n      <Switch>\n        <Route exact path='/posts/:id' component={SinglePost}/>\n        <Route exact path='/albums/:id' component={Photos}/>\n        <Route exact path='/albums' component={Albums}/>\n        <Route exact path='/posts' component={Posts}/>\n        <Route exact path=\"/search-users\" component={SerchUser}/>\n        <Route exact path=\"/testowa\" component={Main}/>\n        <Route exact path='/' component={Main}/>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n\n//1. Oblusga bledu przy searchUser\n//2. Animacje ladowania tresci\n//3. Poprawa sekcji zdjec\n//4. Mniejszy font na mobile\n//5. Funkcja na enter zeby dzialo na strzalke (enter albo strzalka)\n//6. Margin po wyszukaniu usera na button\n//7. Margin-top na postach i albumach","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}